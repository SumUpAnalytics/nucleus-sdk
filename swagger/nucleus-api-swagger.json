{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/datasets": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/userDatasetModel"
                        }
                    }
                },
                "description": "List the datasets owned by the user.",
                "operationId": "get_list_datasets",
                "parameters": [
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/append_json_to_dataset": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/appendjsonpostModel"
                        }
                    }
                },
                "description": "Add a document to a dataset, in JSON form.",
                "operationId": "post_append_json_to_dataset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/appendjsonparams"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/dataset_info": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getDatasetInfoModel"
                        }
                    }
                },
                "description": "Get information about a dataset.",
                "operationId": "get_dataset_info",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format."
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/delete_dataset": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/deletepostModel"
                        }
                    }
                },
                "description": "Delete an existing dataset from the user storage.",
                "operationId": "post_delete_dataset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deletedatasetmodel"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/delete_document": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/deletedocumentpostModel"
                        }
                    }
                },
                "description": "Delete a document from a dataset.",
                "operationId": "post_delete_document",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/deletedocumentmodel"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/import_file_from_url": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/uploadurlpostModel"
                        }
                    }
                },
                "operationId": "post_upload_url",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/uploadURLModel"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/datasets/upload_file": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_upload_file",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Destination dataset where the file will be inserted."
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "datasets"
                ]
            }
        },
        "/documents/document_display": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/docDispModel"
                        }
                    }
                },
                "description": "Document display.",
                "operationId": "get_doc_display",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "doc_titles",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "The title of the documents on which info is requested. Example: [ \"title 1\", \"title 2\" ] "
                    },
                    {
                        "name": "doc_ids",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "The docid of the documents on which info is requested. Example:[ \"docid1, docid2\" ]"
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "documents"
                ]
            }
        },
        "/documents/document_info": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/docInfoModel"
                        }
                    }
                },
                "description": "Document metadata retrieval.",
                "operationId": "get_doc_info",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "doc_titles",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "The title of the documents on which info is requested. Example: [ \"title 1\", \"title 2\" ] "
                    },
                    {
                        "name": "doc_ids",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "The docid of the documents on which info is requested. Example:[ \"docid1, docid2\" ]"
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "documents"
                ]
            }
        },
        "/documents/document_recommend": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/documentRecommendModel"
                        }
                    }
                },
                "description": "Recommendation of documents on given topics that have been extracted from a given dataset.",
                "operationId": "get_doc_recommend_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words."
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_docs",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of desired recommended docs per topic.",
                        "default": 20
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "documents"
                ]
            }
        },
        "/documents/document_summary": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/documentSummaryModel"
                        }
                    }
                },
                "description": "Document summarization.",
                "operationId": "get_doc_summary_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words"
                    },
                    {
                        "name": "doc_title",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "The title of the document to be summarized."
                    },
                    {
                        "name": "summary_length",
                        "in": "query",
                        "type": "integer",
                        "description": "The maximum number of bullet points a user wants to see in the document summary.",
                        "default": 6
                    },
                    {
                        "name": "context_amount",
                        "in": "query",
                        "type": "integer",
                        "description": "The number of sentences surrounding key summary sentences in the documents that they come from.",
                        "default": 0
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "documents"
                ]
            }
        },
        "/topics/author_connectivity": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/authorConnect"
                        }
                    }
                },
                "description": "Get the network of similar authors to a reference author.",
                "operationId": "get_author_connectivity_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "target_author",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Name of the author to be analyzed."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Subject covered by the author, on which to focus the analysis of connectivity. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of words possibly used by the target author that are considered not information-bearing."
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/topics/topic_consensus": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/topicConsensusModel"
                        }
                    }
                },
                "description": "Get topic consensus for topics extracted from a given dataset.",
                "operationId": "get_topic_consensus_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words"
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/topics/topic_historical": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/topiHistModel"
                        }
                    }
                },
                "description": "Get a historical analysis of topics extracted from a dataset.",
                "operationId": "get_topic_historical_analysis_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words"
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Time period selection",
                        "default": "1M",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "update_period",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Frequency at which the historical anlaysis is performed",
                        "default": "d",
                        "enum": [
                            "d",
                            "m",
                            "H",
                            "M"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "inc_step",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of increments of the udpate period in between two historical computations.",
                        "default": 1
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/topics/topic_sentiment": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/topicSentimentModel"
                        }
                    }
                },
                "description": "Get topic sentiment for topics extracted from a given dataset.",
                "operationId": "get_topic_sentiment_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words"
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/topics/topic_summary": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/topicSummaryModel"
                        }
                    }
                },
                "description": "Get summaries of topics that have been extracted from a dataset.",
                "operationId": "get_topic_summary_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words"
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset and summarized.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "summary_length",
                        "in": "query",
                        "type": "integer",
                        "description": "The maximum number of bullet points a user wants to see in each topic summary.",
                        "default": 6
                    },
                    {
                        "name": "context_amount",
                        "in": "query",
                        "type": "integer",
                        "description": "The number of sentences surrounding key summary sentences in the documents that they come from.",
                        "default": 0
                    },
                    {
                        "name": "num_docs",
                        "in": "query",
                        "type": "integer",
                        "description": "The maximum number of key documents to use for summarization.",
                        "default": 20
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/topics/topics": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Failed"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/topicModel"
                        }
                    }
                },
                "description": "Get key topics from a given dataset.",
                "operationId": "get_topic_api",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Dataset name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string",
                        "description": "Fulltext query, using mysql MATCH boolean query format. Example, (\"word1\" OR \"word2\") AND (\"word3\" OR \"word4\")"
                    },
                    {
                        "name": "custom_stop_words",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of stop words."
                    },
                    {
                        "name": "num_topics",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of topics to be extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "num_keywords",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of keywords per topic that is extracted from the dataset.",
                        "default": 8
                    },
                    {
                        "name": "metadata_selection",
                        "in": "query",
                        "type": "string",
                        "description": "json object of {\"metadata_field\":[\"selected_values\"]}"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "type": "string",
                        "description": "Time period selection",
                        "enum": [
                            "1M",
                            "3M",
                            "6M",
                            "12M",
                            "3Y",
                            "5Y",
                            ""
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "excluded_docs",
                        "in": "query",
                        "type": "custom list",
                        "format": "list of strings",
                        "description": "List of document IDs that should be excluded from the analysis. Example, \"docid1, docid2, ..., docidN\" "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "topics"
                ]
            }
        },
        "/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/userModel"
                        }
                    }
                },
                "description": "Use this API to authenticate. If the password is correct, returns the user details, including the user's api key.",
                "operationId": "get_user",
                "parameters": [
                    {
                        "name": "user_email",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Email of the user to authenticate. "
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Plaintext password of the user to authenticate. "
                    },
                    {
                        "in": "textHtml",
                        "name": "consumes",
                        "type": "string"
                    }
                ],
                "consumes": [
                    "text/html"
                ],
                "tags": [
                    "users"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Use this API to register a new user. Email and password are required, all other fields optional.",
                "operationId": "post_user",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        }
    },
    "info": {
        "title": "Nucleus API",
        "version": "0.1",
        "description": "BETA version of the nucleus text analytics API."
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apikey": {
            "type": "apiKey",
            "in": "header",
            "name": "x-api-key"
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "Register or authenticate users"
        },
        {
            "name": "datasets",
            "description": "Manipulate datasets."
        },
        {
            "name": "topics",
            "description": "Perform operations on topics extracted."
        },
        {
            "name": "documents",
            "description": "Perform operations on documents."
        }
    ],
    "definitions": {
        "user": {
            "required": [
                "password",
                "user_email"
            ],
            "properties": {
                "user_email": {
                    "type": "string",
                    "description": "Email of the user to register."
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user to register."
                },
                "first_name": {
                    "type": "string",
                    "description": "First name of the user to register.'"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the user to register."
                },
                "phone": {
                    "type": "integer",
                    "description": "Phone number (int) of the user to register."
                },
                "company": {
                    "type": "string",
                    "description": "Name of the Company of the user."
                },
                "title": {
                    "type": "string",
                    "description": "Job title."
                },
                "country": {
                    "type": "string",
                    "description": "Country of origin."
                }
            },
            "type": "object"
        },
        "userModel": {
            "properties": {
                "user_email": {
                    "type": "string",
                    "description": "Email"
                },
                "first_name": {
                    "type": "string",
                    "description": "First name"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name"
                },
                "api_key": {
                    "type": "string",
                    "description": "API key"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number"
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "settings": {
                    "type": "string",
                    "description": "User settings"
                },
                "reg_time": {
                    "type": "string",
                    "description": "Registration time"
                },
                "license_id": {
                    "type": "string",
                    "description": "License ID"
                },
                "license_type": {
                    "type": "string",
                    "description": "License type"
                },
                "expiry": {
                    "type": "string",
                    "description": "License expiration date"
                }
            },
            "type": "object"
        },
        "userDatasetModel": {
            "properties": {
                "list_datasets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "List of user datasets"
                    }
                }
            },
            "type": "object"
        },
        "appendjsonparams": {
            "required": [
                "dataset"
            ],
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "Name of the dataset."
                },
                "language": {
                    "type": "string",
                    "description": "If you want to override language detection."
                },
                "document": {
                    "$ref": "#/definitions/document"
                }
            },
            "type": "object"
        },
        "document": {
            "required": [
                "content",
                "time",
                "title"
            ],
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Time of publication."
                },
                "title": {
                    "type": "string",
                    "description": "Title of the document."
                },
                "content": {
                    "type": "string",
                    "description": "Plaintext content of the document."
                }
            },
            "type": "object"
        },
        "appendjsonpostModel": {
            "properties": {
                "num_documents": {
                    "type": "string",
                    "description": "Number of documents in the dataset"
                }
            },
            "type": "object"
        },
        "deletedatasetmodel": {
            "required": [
                "dataset"
            ],
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "Name of the dataset."
                }
            },
            "type": "object"
        },
        "deletepostModel": {
            "properties": {
                "success": {
                    "type": "string",
                    "description": "Dataset deleted"
                }
            },
            "type": "object"
        },
        "getDatasetInfoModel": {
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "num_documents": {
                    "type": "string",
                    "description": "Number of documents in the dataset"
                },
                "time_range": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Time range of the dataset"
                    }
                },
                "detected_language": {
                    "type": "string",
                    "description": "Language of the dataset"
                },
                "metadata": {
                    "type": "string",
                    "description": "Metadata information"
                }
            },
            "type": "object"
        },
        "deletedocumentmodel": {
            "required": [
                "dataset",
                "docid"
            ],
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "Name of the dataset."
                },
                "docid": {
                    "type": "string",
                    "description": "ID of the document to be deleted."
                }
            },
            "type": "object"
        },
        "deletedocumentpostModel": {
            "properties": {
                "success": {
                    "type": "string",
                    "description": "Document deleted from dataset"
                }
            },
            "type": "object"
        },
        "uploadURLModel": {
            "required": [
                "dataset",
                "file_url"
            ],
            "properties": {
                "dataset": {
                    "type": "string",
                    "description": "Name of the dataset."
                },
                "file_url": {
                    "type": "string",
                    "description": "Public url pointing to the file (pdf/txt/docx...)"
                },
                "filename": {
                    "type": "string",
                    "description": "Specify the filename if different from the url (nucleus guesses the file type from the extension at the end of the url or file name)"
                },
                "metadata": {
                    "$ref": "#/definitions/MetaData"
                }
            },
            "type": "object"
        },
        "MetaData": {
            "properties": {
                "author": {
                    "type": "string",
                    "description": "Author of the publication."
                }
            },
            "type": "object"
        },
        "uploadurlpostModel": {
            "properties": {
                "success": {
                    "type": "string",
                    "description": "File uploaded from url to the dataset."
                }
            },
            "type": "object"
        },
        "topicModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedTopicModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedTopicModel": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic"
                },
                "keywords_weight": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Weight of keywords in each topic"
                    }
                },
                "strength": {
                    "type": "string",
                    "description": "Prevalence of each topic in the dataset"
                },
                "doc_topic_exposure": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Exposure of each doc of the dataset to each topic"
                    }
                },
                "doc_id": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Docid of each document in the dataset (used to retrieve per-doc info)"
                    }
                }
            },
            "type": "object"
        },
        "topicSentimentModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedTopicSentimentModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedTopicSentimentModel": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic keywords"
                },
                "strength": {
                    "type": "string",
                    "description": "Topic strength"
                },
                "sentiment": {
                    "type": "string",
                    "description": "Topic sentiment"
                },
                "doc_score": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Document scores"
                    }
                },
                "doc_sentiment": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Document sentiments"
                    }
                },
                "doc_id": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Docid of each document in the dataset (used to retrieve per-doc info)"
                    }
                }
            },
            "type": "object"
        },
        "topicConsensusModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedTopicConsensusModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedTopicConsensusModel": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic keywords"
                },
                "strength": {
                    "type": "string",
                    "description": "Topic strength"
                },
                "consensus": {
                    "type": "string",
                    "description": "Topic consensus"
                }
            },
            "type": "object"
        },
        "topicSummaryModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedTopicSummaryModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedTopicSummaryModel": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic keywords"
                },
                "summary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedSummaryModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedSummaryModel": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Document Title"
                },
                "sentences": {
                    "type": "string",
                    "description": "Sentences"
                },
                "sourceid": {
                    "type": "string",
                    "description": "Document ID"
                },
                "attribute": {
                    "$ref": "#/definitions/DocAttributeModel"
                }
            },
            "type": "object"
        },
        "DocAttributeModel": {
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Document published ime"
                },
                "author": {
                    "type": "string",
                    "description": "Document author"
                },
                "source": {
                    "type": "string",
                    "description": "Document source"
                }
            },
            "type": "object"
        },
        "topiHistModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedTopicHistModel"
                    }
                }
            },
            "type": "object"
        },
        "NestedTopicHistModel": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic keywords"
                },
                "strength": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Topic strength"
                    }
                },
                "sentiment": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Topic sentiment"
                    }
                },
                "consensus": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Topic consensus"
                    }
                },
                "time_stamps": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Historical dates of the analysis"
                    }
                }
            },
            "type": "object"
        },
        "authorConnect": {
            "properties": {
                "results": {
                    "$ref": "#/definitions/NestedAuthorConnect"
                }
            },
            "type": "object"
        },
        "NestedAuthorConnect": {
            "properties": {
                "mainstream_connection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedAuthorConnect0"
                    }
                },
                "niche_connection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NestedAuthorConnect0"
                    }
                }
            },
            "type": "object"
        },
        "NestedAuthorConnect0": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic discussed by target author and connected authors"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Authors most similar to target author based on target author discussions"
                    }
                }
            },
            "type": "object"
        },
        "documentRecommendModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/documentRecommendModel1"
                    }
                }
            },
            "type": "object"
        },
        "documentRecommendModel1": {
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Topic keywords"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nestedDocRecModel"
                    }
                }
            },
            "type": "object"
        },
        "nestedDocRecModel": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Document title"
                },
                "sourceid": {
                    "type": "string",
                    "description": "Document ID"
                },
                "attribute": {
                    "$ref": "#/definitions/DocAttributeModel"
                }
            },
            "type": "object"
        },
        "documentSummaryModel": {
            "properties": {
                "doc_title": {
                    "type": "string",
                    "description": "Document title"
                },
                "summary": {
                    "$ref": "#/definitions/NestedDocumentSummaryModel"
                }
            },
            "type": "object"
        },
        "NestedDocumentSummaryModel": {
            "properties": {
                "sentences": {
                    "type": "string",
                    "description": "Sentences belonging to the summary"
                },
                "sourceid": {
                    "type": "string",
                    "description": "The ID of the document the sentence comes from"
                }
            },
            "type": "object"
        },
        "docInfoModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nestedDocInfoModel"
                    }
                }
            },
            "type": "object"
        },
        "nestedDocInfoModel": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Document title"
                },
                "sourceid": {
                    "type": "string",
                    "description": "Document ID"
                },
                "attribute": {
                    "$ref": "#/definitions/DocAttributeModel"
                }
            },
            "type": "object"
        },
        "docDispModel": {
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nestedDocDispModel"
                    }
                }
            },
            "type": "object"
        },
        "nestedDocDispModel": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Document title"
                },
                "sourceid": {
                    "type": "string",
                    "description": "Document ID"
                },
                "content": {
                    "type": "string",
                    "description": "Document content"
                },
                "attribute": {
                    "$ref": "#/definitions/DocAttributeModel"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}
